name: MovieToGather-Deploy

on:

  push:
    branches: [ main, dev, feat/cd ]


jobs:
  build-and-push-docker:

    runs-on: ubuntu-latest

    env:
      API_KEY: ${{ secrets.API_KEY }}
      KAKAO_MAP_AK: ${{ secrets.KAKAO_MAP_AK }}
      TMAP_AK: ${{ secrets.TMAP_AK }}
      AUTH_JWT_SECRET: ${{ secrets.AUTH_JWT_SECRET }}
      AUTH_JWT_ACCESSTOKENEXPIRATIONHOUR: ${{ secrets.AUTH_JWT_ACCESSTOKENEXPIRATIONHOUR }}
      AUTH_JWT_REFRESHTOKENEXPIRATIONHOUR: ${{ secrets.AUTH_JWT_REFRESHTOKENEXPIRATIONHOUR }}
      AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
      AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}
      AUTH_NAVER_ID: ${{ secrets.AUTH_NAVER_ID }}
      AUTH_NAVER_SECRET: ${{ secrets.AUTH_NAVER_SECRET }}
      AUTH_KAKAO_ID: ${{ secrets.AUTH_KAKAO_ID }}
      AUTH_KAKAO_SECRET: ${{ secrets.AUTH_KAKAO_SECRET }}
      POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_REPONAME: ${{ secrets.DOCKER_REPONAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: JDK 17 설치
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Gradle 캐싱
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle 권한 부여
        run: chmod +x gradlew

      - name: Gradle 빌드
        run: ./gradlew build

      - name: Docker install
        uses: docker/setup-buildx-action@v1

      - name: Docker 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker image 빌드
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPONAME }}:latest

      - name: Docker image push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPONAME }}:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_SSH_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker-compose down || true
            sudo docker image rm ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPONAME }}:latest || true
            sudo docker-compose up -d
            
