api:
  key: ${API_KEY}
  popularUrl: ${API_POPULAR_URL}
  genreUrl: ${API_GENRE_URL}
  searchUrl: ${API_SEARCH_URL}

auth:
  jwt:
    issuer: ${AUTH_JWT_ISSUER}
    secret: ${AUTH_JWT_SECRET}
    accessTokenExpirationHour: ${AUTH_JWT_ACCESSTOKENEXPIRATIONHOUR}

spring:
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
  data:
    data:
      redis:
        host: ${REDIS_HOST}
        port: ${REDIS_PORT}
    jdbc:
      repositories:
        enabled: false
  datasource:
    driver-class-name: ${POSTGRES_DRIVER_CLASS_NAME}
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
  sql:
    init:
      mode: embedded

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${AUTH_GOOGLE_ID}
            client-secret: ${AUTH_GOOGLE_SECRET}
            scope:
              - email
              - profile
          naver:
            client-id: ${AUTH_NAVER_ID}
            client-secret: ${AUTH_NAVER_SECRET}
            client-authentication-method: ${AUTH_NAVER_AUTHENTICATION_METHOD}
            authorization-grant-type: ${AUTH_NAVER_GRANT_TYPE}
            redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"
            scope:
              - nickname
              - email
            client-name: Naver
          kakao:
            client-id: ${AUTH_KAKAO_ID}
            client-secret: ${AUTH_KAKAO_SECRET}
            client-authentication-method: ${AUTH_KAKAO_AUTHENTICATION_METHOD}
            authorization-grant-type: ${AUTH_KAKAO_GRANT_TYPE}
            scope:
              - profile_nickname
              - account_email
            redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"
            client-name: Kakao
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id
  jpa:
    generate-ddl: 'true'
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.PostgreSQLDialect



logging:
  level:
    org:
      hibernate:
        SQL: debug
        orm:
          jdbc:
            bind: trace
    springframework:
      security: debug


