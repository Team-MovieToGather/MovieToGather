api:
  key: ${API_KEY}
  popularUrl: ${API_POPULAR_URL}
  genreUrl: ${API_GENRE_URL}
  searchUrl: ${API_SEARCH_URL}

auth:
  jwt:
    issuer: ${AUTH_JWT_ISSUER}
    secret: ${AUTH_JWT_SECRET}
    accessTokenExpirationHour: ${AUTH_JWT_ACCESSTOKENEXPIRATIONHOUR}

spring:
  data:
    jdbc:
      repositories:
        enabled: false
  datasource:
    driver-class-name: ${POSTGRES_DRIVER_CLASS_NAME}
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
  sql:
    init:
      mode: embedded

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${AUTH_GOOGLE_ID}
            client-secret: ${AUTH_GOOGLE_SECRET}
            scope:
              - email
              - profile
  jpa:
    generate-ddl: 'true'
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.PostgreSQLDialect



logging:
  level:
    org:
      hibernate:
        SQL: debug
        orm:
          jdbc:
            bind: trace
    springframework:
      security: debug


